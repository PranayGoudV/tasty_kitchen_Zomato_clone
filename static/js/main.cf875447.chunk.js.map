{"version":3,"sources":["components/ProtectedRoute/index.js","components/LoginForm/index.js","components/Header/index.js","components/ReactSlider/index.js","components/RestaurantHeader/index.js","components/RestaurantCard/index.js","components/AllRestaurantSection/index.js","components/Footer/index.js","components/Home/index.js","components/RestaurantFoodItem/index.js","components/RestaurantDetails/index.js","components/CartItem/index.js","components/Cart/index.js","components/NotFound/index.js","App.js","index.js"],"names":["ProtectedRoute","props","undefined","Cookies","get","to","LoginForm","state","username","password","showSubmitError","errorMsg","onChangeUsername","event","setState","target","value","onChangePassword","onSubmitSuccess","jwtToken","history","set","expires","path","replace","onSubmitFailure","submitForm","preventDefault","userDetails","options","method","body","JSON","stringify","fetch","response","json","data","ok","jwt_token","error_msg","renderPasswordField","className","htmlFor","type","id","onChange","placeholder","renderUsernameField","this","src","alt","onSubmit","Component","Header","isMobileMenuClicked","onClickLogout","remove","onClickMenuBar","prev","onCloseClicked","onClick","withRouter","apiStatusConstants","ReactSlider","sliderImages","apiStatus","getSliderImages","headers","Authorization","fetchedData","updatedData","offers","map","offer","imageUrl","image_url","renderSliderListView","dots","autoplay","autoplaySpeed","arrows","infinite","eachImage","renderFailureView","renderLoadingView","testid","color","height","width","renderAllImages","RestaurantHeader","sortByOptions","activeOptionId","changeSortBy","eachOption","displayText","RestaurantCard","restaurant","name","cuisine","rating","totalReviews","AllRestaurantSection","restaurantList","currentPage","getRestaurants","apiUrl","restaurants","user_rating","total_reviews","renderRestaurantListView","renderRestaurants","leftArrowClicked","rightArrowClicked","Footer","Home","RestaurantFoodItem","updateLocalStorage","isButtonClicked","itemQuantity","eachFoodItem","cost","localCartData","localStorage","getItem","parsedCartData","parse","updatedParsedCartData","cartItem","quantity","push","setItem","updatedCartData","updatedCart","filter","eachItem","onClickedAdd","onMinusClicked","onPlusClicked","updatedItemQuantity","cartData","presentCartData","length","console","log","RestaurantDetails","restaurantData","foodItemData","getFormattedData","reviewsCount","reviews_count","location","costForTwo","cost_for_two","getFoodItemFormattedData","getRestaurantData","match","params","updatedFoodItemData","food_items","renderRestaurantDetailsView","renderRestaurantDetails","CartItem","item","onDecrementClicked","onChangeTotalAmount","onDeleteCartItem","totalItemCost","onIncrementClicked","Cart","orderStatus","onClickPlaceOrder","removeItem","totalCartAmount","updateCartData","parseCartData","cartStatus","cartAmounts","forEach","totalItemAmount","reduce","previousScore","currentScore","NotFound","App","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cf875447.chunk.js","sourcesContent":["import {Redirect, Route} from 'react-router-dom'\nimport Cookies from 'js-cookie'\n\nconst ProtectedRoute = props => {\n  const token = Cookies.get('jwt_token')\n  if (token === undefined) {\n    return <Redirect to=\"/login\" />\n  }\n  return <Route {...props} />\n}\n\nexport default ProtectedRoute\n","import {Component} from 'react'\nimport Cookies from 'js-cookie'\nimport {Redirect} from 'react-router-dom'\n\nimport './index.css'\n\nclass LoginForm extends Component {\n  state = {\n    username: '',\n    password: '',\n    showSubmitError: false,\n    errorMsg: '',\n  }\n\n  onChangeUsername = event => {\n    this.setState({username: event.target.value})\n  }\n\n  onChangePassword = event => {\n    this.setState({password: event.target.value})\n  }\n\n  onSubmitSuccess = jwtToken => {\n    const {history} = this.props\n\n    Cookies.set('jwt_token', jwtToken, {\n      expires: 30,\n      path: '/',\n    })\n    history.replace('/')\n  }\n\n  onSubmitFailure = errorMsg => {\n    this.setState({showSubmitError: true, errorMsg})\n  }\n\n  submitForm = async event => {\n    event.preventDefault()\n    const {username, password} = this.state\n    const userDetails = {username, password}\n    const url = 'https://apis.ccbp.in/login'\n    const options = {\n      method: 'POST',\n      body: JSON.stringify(userDetails),\n    }\n    const response = await fetch(url, options)\n    const data = await response.json()\n    if (response.ok === true) {\n      this.onSubmitSuccess(data.jwt_token)\n    } else {\n      this.onSubmitFailure(data.error_msg)\n    }\n  }\n\n  renderPasswordField = () => {\n    const {password} = this.state\n    return (\n      <>\n        <label className=\"input-label\" htmlFor=\"password\">\n          PASSWORD\n        </label>\n        <input\n          type=\"password\"\n          id=\"password\"\n          className=\"password-input-field\"\n          value={password}\n          onChange={this.onChangePassword}\n          placeholder=\"Password\"\n        />\n      </>\n    )\n  }\n\n  renderUsernameField = () => {\n    const {username} = this.state\n    return (\n      <>\n        <label className=\"input-label\" htmlFor=\"username\">\n          USERNAME\n        </label>\n        <input\n          type=\"text\"\n          id=\"username\"\n          className=\"username-input-field\"\n          value={username}\n          onChange={this.onChangeUsername}\n          placeholder=\"Username\"\n        />\n      </>\n    )\n  }\n\n  render() {\n    const {showSubmitError, errorMsg} = this.state\n    const jwtToken = Cookies.get('jwt_token')\n    if (jwtToken !== undefined) {\n      return <Redirect to=\"/\" />\n    }\n    return (\n      <div className=\"login-form-container\">\n        <div className=\"landing-container\">\n          <p className=\"login-mobile-text\">Login</p>\n          <img\n            src=\"https://res.cloudinary.com/nsp/image/upload/v1635304889/tastyKitchens/LoginMobile_1x_iukq3u.jpg\"\n            className=\"login-image-mobile\"\n            alt=\"website login\"\n          />\n        </div>\n\n        <form className=\"form-container\" onSubmit={this.submitForm}>\n          <img\n            src=\"https://res.cloudinary.com/nsp/image/upload/v1635311275/tastyKitchens/websiteLogo_1x_fzy1tx.png\"\n            className=\"login-website-logo-desktop-image\"\n            alt=\"website logo\"\n          />\n          <h1 className=\"tasty-text\">Tasty Kitchens</h1>\n          <h1 className=\"login-text\">Login</h1>\n          <div className=\"input-container\">{this.renderUsernameField()}</div>\n          <div className=\"input-container\">{this.renderPasswordField()}</div>\n          {showSubmitError && <p className=\"error-message\">{errorMsg}</p>}\n          <button type=\"submit\" className=\"login-button\">\n            Login\n          </button>\n        </form>\n        <img\n          src=\"https://res.cloudinary.com/nsp/image/upload/v1635305272/tastyKitchens/LoginLarge_1x_gfwe0e.jpg\"\n          className=\"login-image-desktop\"\n          alt=\"website login\"\n        />\n      </div>\n    )\n  }\n}\n\nexport default LoginForm\n","import {Component} from 'react'\nimport {Link, withRouter} from 'react-router-dom'\n\nimport Cookies from 'js-cookie'\n\nimport './index.css'\n\nclass Header extends Component {\n  state = {isMobileMenuClicked: false}\n\n  onClickLogout = () => {\n    const {history} = this.props\n    Cookies.remove('jwt_token')\n    history.replace('/login')\n  }\n\n  onClickMenuBar = () => {\n    this.setState(prev => ({isMobileMenuClicked: !prev.isMobileMenuClicked}))\n  }\n\n  onCloseClicked = () => {\n    this.setState(prev => ({isMobileMenuClicked: !prev.isMobileMenuClicked}))\n  }\n\n  render() {\n    const {isMobileMenuClicked} = this.state\n    return (\n      <>\n        <nav className=\"nav-header\">\n          <div className=\"nav-content\">\n            <div className=\"nav-bar-mobile-logo-container\">\n              <Link to=\"/\" className=\"nav-link\">\n                <div className=\"header-logo-container\">\n                  <img\n                    className=\"website-logo\"\n                    src=\"https://res.cloudinary.com/nsp/image/upload/v1635311275/tastyKitchens/websiteLogo_1x_fzy1tx.png\"\n                    alt=\"website logo\"\n                  />\n                  <p className=\"logo-name\">Tasty Kitchens</p>\n                </div>\n              </Link>\n              <button type=\"button\" className=\"nav-mobile-btn\">\n                <img\n                  src=\"https://res.cloudinary.com/nsp/image/upload/v1635332660/tastyKitchens/menu_1x_fcu8zv.png\"\n                  alt=\"nav menu\"\n                  className=\"nav-bar-image\"\n                  onClick={this.onClickMenuBar}\n                />\n              </button>\n            </div>\n\n            <div className=\"nav-bar-large-container\">\n              <Link to=\"/\" className=\"nav-link\">\n                <div className=\"header-logo-container\">\n                  <img\n                    className=\"website-logo\"\n                    src=\"https://res.cloudinary.com/nsp/image/upload/v1635311275/tastyKitchens/websiteLogo_1x_fzy1tx.png\"\n                    alt=\"website logo\"\n                  />\n                  <p className=\"logo-name\">Tasty Kitchens</p>\n                </div>\n              </Link>\n              <ul className=\"nav-menu\">\n                <li className=\"nav-menu-item\">\n                  <Link to=\"/\" className=\"nav-link\">\n                    Home\n                  </Link>\n                </li>\n\n                <li className=\"nav-menu-item\">\n                  <Link to=\"/cart\" className=\"nav-link\">\n                    Cart\n                  </Link>\n                </li>\n              </ul>\n              <button\n                type=\"button\"\n                className=\"logout-desktop-btn\"\n                onClick={this.onClickLogout}\n              >\n                Logout\n              </button>\n            </div>\n          </div>\n        </nav>\n        {isMobileMenuClicked && (\n          <div className=\"nav-mobile-only-menu\">\n            <div className=\"nav-menu-mobile\">\n              <div className=\"nav-menu-container\">\n                <ul className=\"nav-menu-list-mobile\">\n                  <li className=\"nav-menu-item-mobile\">\n                    <Link to=\"/\" className=\"nav-link\">\n                      Home\n                    </Link>\n                  </li>\n\n                  <li className=\"nav-menu-item-mobile\">\n                    <Link to=\"/cart\" className=\"nav-link\">\n                      Cart\n                    </Link>\n                  </li>\n                </ul>\n                <button\n                  type=\"button\"\n                  className=\"logout-desktop-btn-mobile\"\n                  onClick={this.onClickLogout}\n                >\n                  Logout\n                </button>\n              </div>\n              <img\n                src=\"https://res.cloudinary.com/nsp/image/upload/v1635332590/tastyKitchens/Shape_vud3fu.png\"\n                alt=\"nav close\"\n                className=\"nav-bar-image\"\n                onClick={this.onCloseClicked}\n              />\n            </div>\n          </div>\n        )}\n      </>\n    )\n  }\n}\n\nexport default withRouter(Header)\n","import {Component} from 'react'\nimport Slider from 'react-slick'\nimport Loader from 'react-loader-spinner'\nimport Cookies from 'js-cookie'\n\nimport './index.css'\n\nconst apiStatusConstants = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  inProgress: 'IN_PROGRESS',\n}\nclass ReactSlider extends Component {\n  state = {\n    sliderImages: [],\n    apiStatus: apiStatusConstants.initial,\n  }\n\n  componentDidMount() {\n    this.getSliderImages()\n  }\n\n  getSliderImages = async () => {\n    this.setState({\n      apiStatus: apiStatusConstants.inProgress,\n    })\n    const jwtToken = Cookies.get('jwt_token')\n    const apiUrl = `https://apis.ccbp.in/restaurants-list/offers`\n    const options = {\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n      method: 'GET',\n    }\n    const response = await fetch(apiUrl, options)\n    if (response.ok) {\n      const fetchedData = await response.json()\n      const updatedData = fetchedData.offers.map(offer => ({\n        id: offer.id,\n        imageUrl: offer.image_url,\n      }))\n      this.setState({\n        sliderImages: updatedData,\n        apiStatus: apiStatusConstants.success,\n      })\n    } else {\n      this.setState({\n        apiStatus: apiStatusConstants.failure,\n      })\n    }\n  }\n\n  renderSliderListView = () => {\n    const {sliderImages} = this.state\n    const settings = {\n      dots: true,\n      autoplay: true,\n      autoplaySpeed: 2000,\n      arrows: false,\n      infinite: true,\n    }\n\n    return (\n      <div className=\"image-container\">\n        <Slider {...settings}>\n          {sliderImages.map(eachImage => (\n            <div key={eachImage.id}>\n              <img\n                className=\"slider-image\"\n                src={eachImage.imageUrl}\n                alt=\"offer\"\n              />\n            </div>\n          ))}\n        </Slider>\n      </div>\n    )\n  }\n\n  renderFailureView = () => (\n    <div className=\"slider-error-view-container\">\n      <h1 className=\"slider-failure-heading-text\">\n        Oops! Something Went Wrong\n      </h1>\n    </div>\n  )\n\n  renderLoadingView = () => (\n    <div testid=\"restaurants-offers-loader\" className=\"slider-loader-container\">\n      <Loader type=\"Oval\" color=\"#F7931E\" height=\"50\" width=\"50\" />\n    </div>\n  )\n\n  renderAllImages = () => {\n    const {apiStatus} = this.state\n\n    switch (apiStatus) {\n      case apiStatusConstants.success:\n        return this.renderSliderListView()\n      case apiStatusConstants.failure:\n        return this.renderFailureView()\n      case apiStatusConstants.inProgress:\n        return this.renderLoadingView()\n      default:\n        return null\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"slider-image-container\">{this.renderAllImages()}</div>\n    )\n  }\n}\n\nexport default ReactSlider\n","import {BsFilterRight} from 'react-icons/bs'\n\nimport './index.css'\n\nconst RestaurantHeader = props => {\n  const onChangeSortBy = event => {\n    const {changeSortBy} = props\n    changeSortBy(event.target.value)\n  }\n\n  const {sortByOptions, activeOptionId} = props\n  return (\n    <div className=\"restaurant-header\">\n      <div className=\"header-text-container\">\n        <h1 className=\"restaurant-list-heading\">Popular Restaurants</h1>\n        <p className=\"restaurant-list-para\">\n          Select Your favourite restaurant special dish and make your day\n          happy...\n        </p>\n      </div>\n      <div className=\"sort-by-container\">\n        <BsFilterRight className=\"sort-by-icon\" />\n        <p className=\"sort-by\">Sort by</p>\n        <select\n          className=\"sort-by-select\"\n          value={activeOptionId}\n          onChange={onChangeSortBy}\n        >\n          {sortByOptions.map(eachOption => (\n            <option\n              key={eachOption.id}\n              value={eachOption.value}\n              className=\"select-option\"\n            >\n              {eachOption.displayText}\n            </option>\n          ))}\n        </select>\n      </div>\n    </div>\n  )\n}\n\nexport default RestaurantHeader\n","import {Link} from 'react-router-dom'\nimport {AiFillStar} from 'react-icons/ai'\nimport './index.css'\n\nconst RestaurantCard = props => {\n  const {restaurant} = props\n  const {imageUrl, name, cuisine, rating, totalReviews, id} = restaurant\n\n  return (\n    <li testid=\"restaurant-item\" className=\"restaurant-item\">\n      <Link to={`/restaurant/${id}`} className=\"link-item\">\n        <img src={imageUrl} alt=\"restaurant\" className=\"restaurant-image\" />\n        <div>\n          <h1 className=\"restaurant-name\">{name}</h1>\n          <p className=\"restaurant-cuisine\">{cuisine}</p>\n          <div className=\"rating-container\">\n            <AiFillStar className=\"star\" />\n            <p className=\"rating\">{rating}</p>\n            <p className=\"reviews\">({totalReviews} rating)</p>\n          </div>\n        </div>\n      </Link>\n    </li>\n  )\n}\n\nexport default RestaurantCard\n","import {Component} from 'react'\nimport Loader from 'react-loader-spinner'\nimport Cookies from 'js-cookie'\n\nimport ReactSlider from '../ReactSlider'\nimport RestaurantHeader from '../RestaurantHeader'\nimport RestaurantCard from '../RestaurantCard'\n\nimport './index.css'\n\nconst sortByOptions = [\n  {\n    id: 0,\n    displayText: 'Highest',\n    value: 'Highest',\n  },\n  {\n    id: 2,\n    displayText: 'Lowest',\n    value: 'Lowest',\n  },\n]\n\nconst apiStatusConstants = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  inProgress: 'IN_PROGRESS',\n}\n\nclass AllRestaurantSection extends Component {\n  state = {\n    restaurantList: [],\n    activeOptionId: 'Lowest',\n    currentPage: 0,\n    apiStatus: apiStatusConstants.initial,\n  }\n\n  componentDidMount() {\n    this.getRestaurants()\n  }\n\n  getRestaurants = async () => {\n    this.setState({\n      apiStatus: apiStatusConstants.inProgress,\n    })\n    const jwtToken = Cookies.get('jwt_token')\n    const {activeOptionId, currentPage} = this.state\n    const apiUrl = `https://apis.ccbp.in/restaurants-list?offset=${\n      currentPage * 9\n    }&limit=9&sort_by_rating=${activeOptionId}`\n    const options = {\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n      method: 'GET',\n    }\n    const response = await fetch(apiUrl, options)\n    if (response.ok) {\n      const fetchedData = await response.json()\n      const updatedData = fetchedData.restaurants.map(restaurant => ({\n        name: restaurant.name,\n        cuisine: restaurant.cuisine,\n        id: restaurant.id,\n        imageUrl: restaurant.image_url,\n        rating: restaurant.user_rating.rating,\n        totalReviews: restaurant.user_rating.total_reviews,\n      }))\n      this.setState({\n        restaurantList: updatedData,\n        apiStatus: apiStatusConstants.success,\n      })\n    } else {\n      this.setState({\n        apiStatus: apiStatusConstants.failure,\n      })\n    }\n  }\n\n  changeSortBy = activeOptionId => {\n    this.setState({activeOptionId}, this.getRestaurants)\n  }\n\n  renderRestaurantListView = () => {\n    const {restaurantList, activeOptionId} = this.state\n\n    return (\n      <>\n        <RestaurantHeader\n          activeOptionId={activeOptionId}\n          sortByOptions={sortByOptions}\n          changeSortBy={this.changeSortBy}\n        />\n        <hr className=\"hr-line\" />\n        <ul className=\"restaurant-list\">\n          {restaurantList.map(restaurant => (\n            <RestaurantCard restaurant={restaurant} key={restaurant.id} />\n          ))}\n        </ul>\n      </>\n    )\n  }\n\n  renderFailureView = () => (\n    <div className=\"restaurant-error-view-container\">\n      <img\n        src=\"https://res.cloudinary.com/djjbttpq0/image/upload/v1641968177/Tasty%20Kitchens/erroring_1x_x7gtp8.png\"\n        alt=\"restaurants failure\"\n        className=\"restaurant-failure-img\"\n      />\n      <h1 className=\"restaurant-failure-heading-text\">Page Not Found</h1>\n      <p className=\"restaurant-failure-description\">\n        we are sorry, the page you requested could not be found Please go back\n        to the homepage\n      </p>\n      <button className=\"error-button\" type=\"button\">\n        Home Page\n      </button>\n    </div>\n  )\n\n  renderLoadingView = () => (\n    <div\n      testid=\"restaurants-list-loader\"\n      className=\"restaurant-loader-container\"\n    >\n      <Loader type=\"Oval\" color=\"#F7931E\" height=\"50\" width=\"50\" />\n    </div>\n  )\n\n  renderRestaurants = () => {\n    const {apiStatus} = this.state\n\n    switch (apiStatus) {\n      case apiStatusConstants.success:\n        return this.renderRestaurantListView()\n      case apiStatusConstants.failure:\n        return this.renderFailureView()\n      case apiStatusConstants.inProgress:\n        return this.renderLoadingView()\n      default:\n        return null\n    }\n  }\n\n  leftArrowClicked = () => {\n    const {currentPage} = this.state\n    if (currentPage > 0) {\n      this.setState(\n        prev => ({currentPage: prev.currentPage - 1}),\n        this.getRestaurants,\n      )\n    }\n  }\n\n  rightArrowClicked = () => {\n    const {currentPage} = this.state\n    if (currentPage < 3) {\n      this.setState(\n        prev => ({currentPage: prev.currentPage + 1}),\n        this.getRestaurants,\n      )\n    }\n  }\n\n  render() {\n    const {currentPage} = this.state\n    return (\n      <div>\n        <ReactSlider />\n        <div className=\"all-restaurant-responsive-container\">\n          {this.renderRestaurants()}\n          <div className=\"restaurant-navigation\">\n            <button\n              type=\"button\"\n              className=\"arrow-button\"\n              testid=\"pagination-left-button\"\n              onClick={this.leftArrowClicked}\n            >\n              <img\n                src=\"https://res.cloudinary.com/nsp/image/upload/v1635835069/tastyKitchens/Icon_1x_iq50dr.png\"\n                alt=\"\"\n                className=\"arrow\"\n              />\n            </button>\n            <span testid=\"active-page-number\" className=\"current-page\">\n              {currentPage + 1}\n            </span>\n            <button\n              type=\"button\"\n              className=\"arrow-button\"\n              testid=\"pagination-right-button\"\n              onClick={this.rightArrowClicked}\n            >\n              <img\n                src=\"https://res.cloudinary.com/nsp/image/upload/v1635835103/tastyKitchens/Icon_1x_n6kori.png\"\n                alt=\"\"\n                className=\"arrow\"\n              />\n            </button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default AllRestaurantSection\n","import {\n  FaPinterestSquare,\n  FaInstagram,\n  FaTwitter,\n  FaFacebookSquare,\n} from 'react-icons/fa'\n\nimport './index.css'\n\nconst Footer = () => (\n  <div className=\"footer-container\">\n    <div className=\"footer-heading-container\">\n      <img\n        src=\"https://res.cloudinary.com/nsp/image/upload/v1635840304/tastyKitchens/logowhite_t8wfhc.png\"\n        alt=\"website-footer-logo\"\n        className=\"website-footer-logo\"\n      />\n      <h1 className=\"footer-heading\">Tasty Kitchens</h1>\n    </div>\n    <p className=\"footer-para\">\n      The only thing we are serious about is food. Contact us on\n    </p>\n    <div className=\"social-container\">\n      <FaPinterestSquare\n        testid=\"pintrest-social-icon\"\n        className=\"social-icon\"\n      />\n      <FaInstagram testid=\"instagram-social-icon\" className=\"social-icon\" />\n      <FaTwitter testid=\"twitter-social-icon\" className=\"social-icon\" />\n      <FaFacebookSquare testid=\"facebook-social-icon\" className=\"social-icon\" />\n    </div>\n  </div>\n)\n\nexport default Footer\n","import Header from '../Header'\n\nimport AllRestaurantSection from '../AllRestaurantSection'\nimport Footer from '../Footer'\n\nconst Home = () => (\n  <>\n    <Header />\n    <AllRestaurantSection />\n    <Footer />\n  </>\n)\n\nexport default Home\n","import {Component} from 'react'\nimport {AiFillStar} from 'react-icons/ai'\n\nimport './index.css'\n\nclass RestaurantFoodItem extends Component {\n  state = {}\n\n  componentDidMount() {\n    const {eachFoodItem} = this.props\n    const {id} = eachFoodItem\n    const cartData = localStorage.getItem('cartData')\n    const parsedCartData = JSON.parse(cartData)\n    if (parsedCartData === null) {\n      this.setState({\n        isButtonClicked: false,\n        itemQuantity: 0,\n      })\n    } else {\n      const presentCartData = parsedCartData.filter(\n        eachItem => eachItem.id === id,\n      )\n      if (presentCartData.length > 0) {\n        this.setState({\n          isButtonClicked: true,\n          itemQuantity: presentCartData[0].quantity,\n        })\n      }\n    }\n  }\n\n  updateLocalStorage = () => {\n    const {isButtonClicked, itemQuantity} = this.state\n    const {eachFoodItem} = this.props\n    const {imageUrl, name, cost, id} = eachFoodItem\n\n    const localCartData = localStorage.getItem('cartData')\n    const parsedCartData = JSON.parse(localCartData)\n\n    if (parsedCartData === null) {\n      const updatedParsedCartData = []\n\n      if (isButtonClicked === true && itemQuantity > 0) {\n        const cartItem = {id, name, cost, imageUrl, quantity: itemQuantity}\n        updatedParsedCartData.push(cartItem)\n        localStorage.setItem('cartData', JSON.stringify(updatedParsedCartData))\n      }\n    } else {\n      const updatedCartData = parsedCartData\n      if (isButtonClicked === true) {\n        const cartItem = {id, name, cost, imageUrl, quantity: itemQuantity}\n        const updatedCart = updatedCartData.filter(\n          eachItem => eachItem.id !== id,\n        )\n        updatedCart.push(cartItem)\n        localStorage.setItem('cartData', JSON.stringify(updatedCart))\n      } else {\n        const updatedCart = updatedCartData.filter(\n          eachItem => eachItem.id !== id,\n        )\n        localStorage.setItem('cartData', JSON.stringify(updatedCart))\n      }\n    }\n  }\n\n  onClickedAdd = () => {\n    this.setState(\n      {\n        isButtonClicked: true,\n        itemQuantity: 1,\n      },\n      this.updateLocalStorage,\n    )\n  }\n\n  onMinusClicked = () => {\n    const {itemQuantity} = this.state\n    if (itemQuantity < 2) {\n      this.setState(\n        {\n          itemQuantity: 0,\n          isButtonClicked: false,\n        },\n        this.updateLocalStorage,\n      )\n    } else {\n      this.setState(\n        prev => ({\n          itemQuantity: prev.itemQuantity - 1,\n          isButtonClicked: true,\n        }),\n        this.updateLocalStorage,\n      )\n    }\n  }\n\n  onPlusClicked = () => {\n    const {itemQuantity} = this.state\n    const updatedItemQuantity = itemQuantity + 1\n    this.setState({itemQuantity: updatedItemQuantity}, this.updateLocalStorage)\n  }\n\n  render() {\n    const {eachFoodItem} = this.props\n    const {imageUrl, name, cost, rating} = eachFoodItem\n    const {isButtonClicked, itemQuantity} = this.state\n    console.log(isButtonClicked)\n    console.log(itemQuantity)\n\n    return (\n      <li testid=\"foodItem\" className=\"food-item-container\">\n        <img src={imageUrl} alt=\"\" className=\"food-item-image\" />\n        <div className=\"food-item-details-container\">\n          <h1 className=\"food-item-name\">{name}</h1>\n          <p className=\"food-item-cost\">{cost}</p>\n          <div className=\"rating-container\">\n            <AiFillStar className=\"food-item-star\" />\n            <p className=\"food-item-rating\">{rating}</p>\n          </div>\n          {isButtonClicked && itemQuantity > 0 ? (\n            <div className=\"food-item-quantity-container\">\n              <button\n                testid=\"decrement-count\"\n                type=\"button\"\n                className=\"minus-button\"\n                onClick={this.onMinusClicked}\n              >\n                -\n              </button>\n              <p testid=\"active-count\" className=\"item-quantity-number\">\n                {itemQuantity}\n              </p>\n              <button\n                testid=\"increment-count\"\n                type=\"button\"\n                className=\"plus-button\"\n                onClick={this.onPlusClicked}\n              >\n                +\n              </button>\n            </div>\n          ) : (\n            <button\n              type=\"button\"\n              className=\"food-item-button\"\n              onClick={this.onClickedAdd}\n            >\n              Add\n            </button>\n          )}\n        </div>\n      </li>\n    )\n  }\n}\n\nexport default RestaurantFoodItem\n","import {Component} from 'react'\nimport Cookies from 'js-cookie'\nimport Loader from 'react-loader-spinner'\nimport {AiFillStar} from 'react-icons/ai'\n\nimport Header from '../Header'\nimport Footer from '../Footer'\nimport RestaurantFoodItem from '../RestaurantFoodItem'\n\nimport './index.css'\n\nconst apiStatusConstants = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  inProgress: 'IN_PROGRESS',\n}\n\nclass RestaurantDetails extends Component {\n  state = {\n    restaurantData: {},\n    foodItemData: [],\n    apiStatus: apiStatusConstants.initial,\n  }\n\n  componentDidMount() {\n    this.getRestaurantData()\n  }\n\n  getFormattedData = data => ({\n    id: data.id,\n    imageUrl: data.image_url,\n    rating: data.rating,\n    name: data.name,\n    reviewsCount: data.reviews_count,\n    location: data.location,\n    costForTwo: data.cost_for_two,\n    cuisine: data.cuisine,\n  })\n\n  getFoodItemFormattedData = data => ({\n    imageUrl: data.image_url,\n    name: data.name,\n    cost: data.cost,\n    rating: data.rating,\n    id: data.id,\n  })\n\n  getRestaurantData = async () => {\n    const {match} = this.props\n    const {params} = match\n    const {id} = params\n\n    this.setState({\n      apiStatus: apiStatusConstants.inProgress,\n    })\n    const jwtToken = Cookies.get('jwt_token')\n    const apiUrl = `https://apis.ccbp.in/restaurants-list/${id}`\n    const options = {\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n      method: 'GET',\n    }\n    const response = await fetch(apiUrl, options)\n    if (response.ok) {\n      const fetchedData = await response.json()\n      const updatedData = this.getFormattedData(fetchedData)\n      const updatedFoodItemData = fetchedData.food_items.map(eachItem =>\n        this.getFoodItemFormattedData(eachItem),\n      )\n      this.setState({\n        restaurantData: updatedData,\n        foodItemData: updatedFoodItemData,\n        apiStatus: apiStatusConstants.success,\n      })\n    } else {\n      this.setState({\n        apiStatus: apiStatusConstants.failure,\n      })\n    }\n  }\n\n  renderRestaurantDetailsView = () => {\n    const {restaurantData, foodItemData} = this.state\n    const {\n      imageUrl,\n      rating,\n      name,\n      location,\n      reviewsCount,\n      costForTwo,\n      cuisine,\n    } = restaurantData\n\n    return (\n      <>\n        <div className=\"specific-restaurant-details-container\">\n          <div className=\"restaurant-banner-container\">\n            <div className=\"banner-responsive-container\">\n              <img\n                src={imageUrl}\n                alt=\"restaurant\"\n                className=\"specific-restaurant-image\"\n              />\n              <div className=\"banner-details-container\">\n                <h1 className=\"specific-restaurant-name\">{name}</h1>\n                <p className=\"specific-restaurant-cuisine\">{cuisine}</p>\n                <p className=\"specific-restaurant-location\">{location}</p>\n                <div className=\"rating-cost-container\">\n                  <div className=\"specific-restaurant-rating-container\">\n                    <div className=\"rating-container\">\n                      <AiFillStar className=\"restaurant-details-star\" />\n                      <p className=\"specific-restaurant-rating\">{rating}</p>\n                    </div>\n                    <p className=\"specific-restaurant-reviews\">\n                      {reviewsCount}+ Ratings\n                    </p>\n                  </div>\n                  <hr className=\"line\" />\n                  <div className=\"cost-container\">\n                    <p className=\"specific-restaurant-cost\">{costForTwo}</p>\n                    <p className=\"specific-restaurant-cost-text\">\n                      Cost for two\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <ul className=\"food-item-list-container\">\n            {foodItemData.map(eachFoodItem => (\n              <RestaurantFoodItem\n                eachFoodItem={eachFoodItem}\n                key={eachFoodItem.id}\n              />\n            ))}\n          </ul>\n        </div>\n        <Footer />\n      </>\n    )\n  }\n\n  renderLoadingView = () => (\n    <div\n      testid=\"restaurant-details-loader\"\n      className=\"restaurant-loader-container\"\n    >\n      <Loader type=\"Oval\" color=\"#F7931E\" height=\"50\" width=\"50\" />\n    </div>\n  )\n\n  renderFailureView = () => (\n    <div className=\"restaurant-error-view-container\">\n      <img\n        src=\"https://res.cloudinary.com/nsp/image/upload/v1635664104/tastyKitchens/error_1x_csgpog.png\"\n        alt=\"restaurants failure\"\n        className=\"restaurant-failure-img\"\n      />\n      <h1 className=\"restaurant-failure-heading-text\">Page Not Found</h1>\n      <p className=\"restaurant-failure-description\">\n        we are sorry, the page you requested could not be found Please go back\n        to the homepage\n      </p>\n      <button className=\"error-button\" type=\"button\">\n        Home Page\n      </button>\n    </div>\n  )\n\n  renderRestaurantDetails = () => {\n    const {apiStatus} = this.state\n\n    switch (apiStatus) {\n      case apiStatusConstants.success:\n        return this.renderRestaurantDetailsView()\n      case apiStatusConstants.failure:\n        return this.renderFailureView()\n      case apiStatusConstants.inProgress:\n        return this.renderLoadingView()\n      default:\n        return null\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <Header />\n        <div className=\"Restaurant-details-container\">\n          {this.renderRestaurantDetails()}\n        </div>\n      </>\n    )\n  }\n}\n\nexport default RestaurantDetails\n","import {Component} from 'react'\nimport {BsPlusSquare, BsDashSquare} from 'react-icons/bs'\nimport './index.css'\n\nclass CartItem extends Component {\n  state = {}\n\n  componentDidMount() {\n    const {eachItem} = this.props\n    const {cost, quantity} = eachItem\n    const totalItemCost = cost * quantity\n    this.setState({totalItemCost, quantity})\n  }\n\n  updateLocalStorage = () => {\n    const {quantity} = this.state\n    const {eachItem} = this.props\n    const {imageUrl, name, cost, id} = eachItem\n\n    const localCartData = localStorage.getItem('cartData')\n    const parsedCartData = JSON.parse(localCartData)\n    const updatedCartData = parsedCartData\n    const cartItem = {id, name, cost, imageUrl, quantity}\n    const updatedCart = updatedCartData.filter(item => item.id !== id)\n    updatedCart.push(cartItem)\n    localStorage.setItem('cartData', JSON.stringify(updatedCart))\n  }\n\n  onDecrementClicked = () => {\n    const {onChangeTotalAmount, eachItem, onDeleteCartItem} = this.props\n    const {cost, id} = eachItem\n    const {quantity} = this.state\n    if (quantity > 1) {\n      onChangeTotalAmount(-1 * cost)\n      this.setState(\n        prev => ({\n          quantity: prev.quantity - 1,\n          totalItemCost: prev.totalItemCost - cost,\n        }),\n        this.updateLocalStorage,\n      )\n    } else {\n      onChangeTotalAmount(-1 * cost)\n      onDeleteCartItem(id)\n    }\n  }\n\n  onIncrementClicked = () => {\n    const {onChangeTotalAmount, eachItem} = this.props\n    const {cost} = eachItem\n    onChangeTotalAmount(cost)\n    this.setState(\n      prev => ({\n        quantity: prev.quantity + 1,\n        totalItemCost: prev.totalItemCost + cost,\n      }),\n      this.updateLocalStorage,\n    )\n  }\n\n  render() {\n    const {eachItem} = this.props\n    const {imageUrl, name} = eachItem\n    const {totalItemCost, quantity} = this.state\n    return (\n      <>\n        <li testid=\"cartItem\" className=\"mobile-list-cart-item\">\n          <img\n            className=\"mobile-cart-item-image\"\n            src={imageUrl}\n            alt={imageUrl}\n          />\n          <div>\n            <h1 className=\"cart-Item-name\">{name}</h1>\n            <div className=\"cartItem-quantity-container\">\n              <button\n                testid=\"decrement-quantity\"\n                type=\"button\"\n                className=\"decrement-button\"\n                onClick={this.onDecrementClicked}\n              >\n                <BsDashSquare />\n              </button>\n              <span testid=\"item-quantity\" className=\"cart-item-quantity\">\n                {quantity}\n              </span>\n              <button\n                testid=\"increment-quantity\"\n                type=\"button\"\n                className=\"increment-button\"\n                onClick={this.onIncrementClicked}\n              >\n                <BsPlusSquare />\n              </button>\n            </div>\n            <p testid=\"total-price\" className=\"cart-item-cost\">\n              <span>₹ </span>\n              {totalItemCost}\n            </p>\n          </div>\n        </li>\n        <li testid=\"cartItem\" className=\"desktop-list-cart-item\">\n          <div className=\"desktop-item-container\">\n            <img\n              className=\"desktop-cart-item-image\"\n              src={imageUrl}\n              alt={imageUrl}\n            />\n            <h1 className=\"desktop-cart-item-name\">{name}</h1>\n          </div>\n          <div className=\"desktop-cartItem-quantity-container\">\n            <button\n              testid=\"decrement-quantity\"\n              type=\"button\"\n              className=\"decrement-button\"\n              onClick={this.onDecrementClicked}\n            >\n              <BsDashSquare />\n            </button>\n            <span testid=\"item-quantity\" className=\"desktop-cart-item-quantity\">\n              {quantity}\n            </span>\n            <button\n              testid=\"increment-quantity\"\n              type=\"button\"\n              className=\"increment-button\"\n              onClick={this.onIncrementClicked}\n            >\n              <BsPlusSquare />\n            </button>\n          </div>\n          <p testid=\"total-price\" className=\"desktop-cart-item-cost\">\n            <span>₹ </span>\n            {totalItemCost}\n          </p>\n        </li>\n      </>\n    )\n  }\n}\n\nexport default CartItem\n","import {Component} from 'react'\nimport {Link} from 'react-router-dom'\nimport CartItem from '../CartItem'\nimport Header from '../Header'\nimport Footer from '../Footer'\nimport './index.css'\n\nclass Cart extends Component {\n  state = {cartData: [], orderStatus: false}\n\n  componentDidMount() {\n    const cartData = localStorage.getItem('cartData')\n    const parseCartData = JSON.parse(cartData)\n    if (parseCartData === null || parseCartData.length === 0) {\n      this.setState({cartStatus: false})\n    } else {\n      const cartAmounts = []\n\n      if (parseCartData.length > 0) {\n        parseCartData.forEach(eachItem => {\n          const totalItemAmount = eachItem.cost * eachItem.quantity\n          cartAmounts.push(totalItemAmount)\n        })\n        const totalCartAmount = cartAmounts.reduce(\n          (previousScore, currentScore) => previousScore + currentScore,\n        )\n        this.setState({totalCartAmount})\n      }\n      this.setState({cartData: parseCartData, cartStatus: true})\n    }\n  }\n\n  onClickPlaceOrder = () => {\n    localStorage.removeItem('cartData')\n    this.setState({orderStatus: true, cartData: []})\n  }\n\n  onChangeTotalAmount = value => {\n    this.setState(prev => ({totalCartAmount: prev.totalCartAmount + value}))\n  }\n\n  updateCartData = () => {\n    const {cartData} = this.state\n    if (cartData.length > 0) {\n      localStorage.setItem('cartData', JSON.stringify(cartData))\n    } else {\n      localStorage.removeItem('cartData')\n    }\n  }\n\n  onDeleteCartItem = id => {\n    const {cartData} = this.state\n    const updatedCartData = cartData.filter(eachItem => eachItem.id !== id)\n    this.setState({cartData: updatedCartData}, this.updateCartData)\n  }\n\n  render() {\n    const {cartData, cartStatus, orderStatus, totalCartAmount} = this.state\n\n    return (\n      <>\n        {cartStatus && totalCartAmount > 0 ? (\n          <>\n            {!orderStatus ? (\n              <div>\n                <Header />\n                <div className=\"cart-container\">\n                  <div className=\"cart-responsive-container\">\n                    <ul className=\"cart-list-container\">\n                      <li className=\"cart-desktop-list-header\">\n                        <p className=\"list-header-name\">Item</p>\n                        <p className=\"list-header-name\">Quantity</p>\n                        <p className=\"list-header-name\">Price</p>\n                      </li>\n                      {cartData.map(eachItem => (\n                        <CartItem\n                          eachItem={eachItem}\n                          key={eachItem.id}\n                          onChangeTotalAmount={this.onChangeTotalAmount}\n                          onDeleteCartItem={this.onDeleteCartItem}\n                        />\n                      ))}\n                    </ul>\n                    <hr className=\"cart-line\" />\n                    <div className=\"total-cart-amount-container\">\n                      <h1 className=\"total-order-text\">Order Total:</h1>\n                      <p testid=\"total-price\" className=\"total-order-amount\">\n                        ₹{totalCartAmount}\n                      </p>\n                    </div>\n                    <div className=\"place-order-button-container\">\n                      <button\n                        type=\"button\"\n                        className=\"cart-place-order-button\"\n                        onClick={this.onClickPlaceOrder}\n                      >\n                        Place Order\n                      </button>\n                    </div>\n                  </div>\n                </div>\n                <Footer />\n              </div>\n            ) : (\n              <>\n                <Header />\n                <div className=\"order-successful-container\">\n                  <div className=\"order-successful-responsive-container\">\n                    <img\n                      className=\"order-successful-image\"\n                      src=\"https://res.cloudinary.com/nsp/image/upload/v1636426713/tastyKitchens/successful_1x_micicp.png\"\n                      alt=\"\"\n                    />\n                    <h1 className=\"order-successful-heading\">\n                      Payment Successful\n                    </h1>\n                    <p className=\"order-successful-para\">\n                      Thank you for ordering <br />\n                      Your payment is successfully completed.\n                    </p>\n                    <Link to=\"/\">\n                      <button type=\"button\" className=\"order-successful-button\">\n                        Go To Home Page\n                      </button>\n                    </Link>\n                  </div>\n                </div>\n              </>\n            )}\n          </>\n        ) : (\n          <div>\n            <Header />\n            <div className=\"empty-cart-container\">\n              <div className=\"empty-cart-responsive-container\">\n                <img\n                  className=\"empty-cart-image\"\n                  src=\"https://res.cloudinary.com/nsp/image/upload/v1636379708/tastyKitchens/empty_cart_1_1x_o1nekx.png\"\n                  alt=\"empty cart\"\n                />\n                <h1 className=\"empty-cart-heading\">No Order Yet!</h1>\n                <p className=\"empty-cart-para\">\n                  Your cart is empty. Add something from the menu.\n                </p>\n                <Link to=\"/\">\n                  <button className=\"empty-cart-button\" type=\"button\">\n                    Order Now\n                  </button>\n                </Link>\n              </div>\n            </div>\n          </div>\n        )}\n      </>\n    )\n  }\n}\n\nexport default Cart\n","import {Link} from 'react-router-dom'\nimport './index.css'\n\nconst NotFound = () => (\n  <div className=\"restaurant-error-view-container\">\n    <img\n      src=\"https://res.cloudinary.com/djjbttpq0/image/upload/v1641968177/Tasty%20Kitchens/erroring_1x_x7gtp8.png\"\n      alt=\"not found\"\n      className=\"restaurant-failure-img\"\n    />\n    <h1 className=\"restaurant-failure-heading-text\">Page Not Found</h1>\n    <p className=\"restaurant-failure-description\">\n      we are sorry, the page you requested could not be found Please go back to\n      the homepage\n    </p>\n    <Link to=\"/\">\n      <button className=\"error-button\" type=\"button\">\n        Home Page\n      </button>\n    </Link>\n  </div>\n)\n\nexport default NotFound\n","import {Switch, Redirect, Route} from 'react-router-dom'\n\nimport ProtectedRoute from './components/ProtectedRoute'\n\nimport LoginForm from './components/LoginForm'\n\nimport Home from './components/Home'\nimport RestaurantDetails from './components/RestaurantDetails'\nimport Cart from './components/Cart'\nimport NotFound from './components/NotFound'\n\nimport './App.css'\n\nconst App = () => (\n  <Switch>\n    <Route exact path=\"/login\" component={LoginForm} />\n    <ProtectedRoute exact path=\"/\" component={Home} />\n    <ProtectedRoute\n      exact\n      path=\"/restaurant/:id\"\n      component={RestaurantDetails}\n    />\n    <ProtectedRoute exact path=\"/cart\" component={Cart} />\n    <Route path=\"/not-found\" component={NotFound} />\n    <Redirect to=\"not-found\" />\n  </Switch>\n)\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {BrowserRouter} from 'react-router-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}